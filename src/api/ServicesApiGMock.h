/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef CLOUD_UNIKRAFT_V1_API_ServicesApiGMock_H_
#define CLOUD_UNIKRAFT_V1_API_ServicesApiGMock_H_

#include <gmock/gmock.h>

#include "ServicesApi.h"

namespace cloud {
namespace unikraft {
namespace v1 {
namespace api {

using namespace cloud::unikraft::v1::model;


class  ServicesApiMock : public IServicesApi
{
public:
    using Base = IServicesApi;

    ServicesApiMock() = default;
    explicit ServicesApiMock( std::shared_ptr<ApiClient> apiClient ) { };
    ~ServicesApiMock() override = default;

    MOCK_METHOD1( createServices, pplx::task<std::shared_ptr<Create_services_200_response>> (
        std::shared_ptr<Create_services_request> createServicesRequest
    ) );
    MOCK_METHOD1( deleteServiceByUuid, pplx::task<std::shared_ptr<Delete_services_200_response>> (
        utility::string_t uuid
    ) );
    MOCK_METHOD1( deleteServices, pplx::task<std::shared_ptr<Delete_services_200_response>> (
        boost::optional<std::vector<std::shared_ptr<Delete_services_request_inner>>> deleteServicesRequestInner
    ) );
    MOCK_METHOD2( getServiceByUuid, pplx::task<std::shared_ptr<Get_service_by_uuid_200_response>> (
        utility::string_t uuid,
        boost::optional<bool> details
    ) );
    MOCK_METHOD2( getServices, pplx::task<std::shared_ptr<Get_services_200_response>> (
        boost::optional<bool> details,
        boost::optional<std::vector<std::shared_ptr<Get_services_request_inner>>> getServicesRequestInner
    ) );
};

}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_API_ServicesApiGMock_H_ */

