/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "UnikraftCloudV1APIClient/model/Get_instance_logs_200_response_data_instances_inner_range.h"

namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



Get_instance_logs_200_response_data_instances_inner_range::Get_instance_logs_200_response_data_instances_inner_range()
{
    m_Start = 0L;
    m_StartIsSet = false;
    m_End = 0L;
    m_EndIsSet = false;
}

Get_instance_logs_200_response_data_instances_inner_range::~Get_instance_logs_200_response_data_instances_inner_range()
{
}

void Get_instance_logs_200_response_data_instances_inner_range::validate()
{
    // TODO: implement validation
}

web::json::value Get_instance_logs_200_response_data_instances_inner_range::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_StartIsSet)
    {
        val[utility::conversions::to_string_t(U("start"))] = ModelBase::toJson(m_Start);
    }
    if(m_EndIsSet)
    {
        val[utility::conversions::to_string_t(U("end"))] = ModelBase::toJson(m_End);
    }

    return val;
}

bool Get_instance_logs_200_response_data_instances_inner_range::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("start"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("start")));
        if(!fieldValue.is_null())
        {
            int64_t refVal_setStart;
            ok &= ModelBase::fromJson(fieldValue, refVal_setStart);
            setStart(refVal_setStart);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("end"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("end")));
        if(!fieldValue.is_null())
        {
            int64_t refVal_setEnd;
            ok &= ModelBase::fromJson(fieldValue, refVal_setEnd);
            setEnd(refVal_setEnd);
        }
    }
    return ok;
}

void Get_instance_logs_200_response_data_instances_inner_range::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_StartIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("start")), m_Start));
    }
    if(m_EndIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("end")), m_End));
    }
}

bool Get_instance_logs_200_response_data_instances_inner_range::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("start"))))
    {
        int64_t refVal_setStart;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("start"))), refVal_setStart );
        setStart(refVal_setStart);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("end"))))
    {
        int64_t refVal_setEnd;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("end"))), refVal_setEnd );
        setEnd(refVal_setEnd);
    }
    return ok;
}

int64_t Get_instance_logs_200_response_data_instances_inner_range::getStart() const
{
    return m_Start;
}

void Get_instance_logs_200_response_data_instances_inner_range::setStart(int64_t value)
{
    m_Start = value;
    m_StartIsSet = true;
}

bool Get_instance_logs_200_response_data_instances_inner_range::startIsSet() const
{
    return m_StartIsSet;
}

void Get_instance_logs_200_response_data_instances_inner_range::unsetStart()
{
    m_StartIsSet = false;
}
int64_t Get_instance_logs_200_response_data_instances_inner_range::getEnd() const
{
    return m_End;
}

void Get_instance_logs_200_response_data_instances_inner_range::setEnd(int64_t value)
{
    m_End = value;
    m_EndIsSet = true;
}

bool Get_instance_logs_200_response_data_instances_inner_range::endIsSet() const
{
    return m_EndIsSet;
}

void Get_instance_logs_200_response_data_instances_inner_range::unsetEnd()
{
    m_EndIsSet = false;
}
}
}
}
}


