/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "UnikraftCloudV1APIClient/model/Create_instance_request_env.h"

namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



Create_instance_request_env::Create_instance_request_env()
{
    m_AdditionalProperties = utility::conversions::to_string_t("");
    m_AdditionalPropertiesIsSet = false;
}

Create_instance_request_env::~Create_instance_request_env()
{
}

void Create_instance_request_env::validate()
{
    // TODO: implement validation
}

web::json::value Create_instance_request_env::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_AdditionalPropertiesIsSet)
    {
        val[utility::conversions::to_string_t(U("additionalProperties"))] = ModelBase::toJson(m_AdditionalProperties);
    }

    return val;
}

bool Create_instance_request_env::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("additionalProperties"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("additionalProperties")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setAdditionalProperties;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAdditionalProperties);
            setAdditionalProperties(refVal_setAdditionalProperties);
        }
    }
    return ok;
}

void Create_instance_request_env::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_AdditionalPropertiesIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("additionalProperties")), m_AdditionalProperties));
    }
}

bool Create_instance_request_env::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("additionalProperties"))))
    {
        utility::string_t refVal_setAdditionalProperties;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("additionalProperties"))), refVal_setAdditionalProperties );
        setAdditionalProperties(refVal_setAdditionalProperties);
    }
    return ok;
}

utility::string_t Create_instance_request_env::getAdditionalProperties() const
{
    return m_AdditionalProperties;
}

void Create_instance_request_env::setAdditionalProperties(const utility::string_t& value)
{
    m_AdditionalProperties = value;
    m_AdditionalPropertiesIsSet = true;
}

bool Create_instance_request_env::additionalPropertiesIsSet() const
{
    return m_AdditionalPropertiesIsSet;
}

void Create_instance_request_env::unsetAdditionalProperties()
{
    m_AdditionalPropertiesIsSet = false;
}
}
}
}
}


