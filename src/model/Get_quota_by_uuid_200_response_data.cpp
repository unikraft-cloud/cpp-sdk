/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "UnikraftCloudV1APIClient/model/Get_quota_by_uuid_200_response_data.h"

namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



Get_quota_by_uuid_200_response_data::Get_quota_by_uuid_200_response_data()
{
    m_QuotasIsSet = false;
}

Get_quota_by_uuid_200_response_data::~Get_quota_by_uuid_200_response_data()
{
}

void Get_quota_by_uuid_200_response_data::validate()
{
    // TODO: implement validation
}

web::json::value Get_quota_by_uuid_200_response_data::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_QuotasIsSet)
    {
        val[utility::conversions::to_string_t(U("quotas"))] = ModelBase::toJson(m_Quotas);
    }

    return val;
}

bool Get_quota_by_uuid_200_response_data::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("quotas"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("quotas")));
        if(!fieldValue.is_null())
        {
            std::vector<std::shared_ptr<User_quota>> refVal_setQuotas;
            ok &= ModelBase::fromJson(fieldValue, refVal_setQuotas);
            setQuotas(refVal_setQuotas);
        }
    }
    return ok;
}

void Get_quota_by_uuid_200_response_data::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_QuotasIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("quotas")), m_Quotas));
    }
}

bool Get_quota_by_uuid_200_response_data::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("quotas"))))
    {
        std::vector<std::shared_ptr<User_quota>> refVal_setQuotas;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("quotas"))), refVal_setQuotas );
        setQuotas(refVal_setQuotas);
    }
    return ok;
}

std::vector<std::shared_ptr<User_quota>>& Get_quota_by_uuid_200_response_data::getQuotas()
{
    return m_Quotas;
}

void Get_quota_by_uuid_200_response_data::setQuotas(const std::vector<std::shared_ptr<User_quota>>& value)
{
    m_Quotas = value;
    m_QuotasIsSet = true;
}

bool Get_quota_by_uuid_200_response_data::quotasIsSet() const
{
    return m_QuotasIsSet;
}

void Get_quota_by_uuid_200_response_data::unsetQuotas()
{
    m_QuotasIsSet = false;
}
}
}
}
}


