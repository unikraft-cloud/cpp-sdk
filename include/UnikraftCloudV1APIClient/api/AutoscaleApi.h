/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AutoscaleApi.h
 *
 * 
 */

#ifndef CLOUD_UNIKRAFT_V1_API_AutoscaleApi_H_
#define CLOUD_UNIKRAFT_V1_API_AutoscaleApi_H_



#include "UnikraftCloudV1APIClient/ApiClient.h"

#include "UnikraftCloudV1APIClient/model/Create_autoscale_config_200_response.h"
#include "UnikraftCloudV1APIClient/model/Create_autoscale_config_request.h"
#include "UnikraftCloudV1APIClient/model/Create_autoscale_policy_200_response.h"
#include "UnikraftCloudV1APIClient/model/Create_autoscale_policy_request.h"
#include "UnikraftCloudV1APIClient/model/Delete_autoscale_configs_200_response.h"
#include "UnikraftCloudV1APIClient/model/Delete_autoscale_policies_200_response.h"
#include "UnikraftCloudV1APIClient/model/Delete_autoscale_policy_by_service_uuid_and_policy_name_200_response.h"
#include "UnikraftCloudV1APIClient/model/Get_autosacle_policies_200_response.h"
#include "UnikraftCloudV1APIClient/model/Get_autosacle_policies_request_inner.h"
#include "UnikraftCloudV1APIClient/model/Get_autoscale_configs_200_response.h"
#include "UnikraftCloudV1APIClient/model/Get_autoscale_configs_request_inner.h"
#include "UnikraftCloudV1APIClient/model/Get_autoscale_policy_by_service_uuid_and_policy_name_200_response.h"
#include "UnikraftCloudV1APIClient/model/Get_certificates_default_response.h"
#include <vector>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace cloud {
namespace unikraft {
namespace v1 {
namespace api {

using namespace cloud::unikraft::v1::model;

class  IAutoscaleApi
{
public:
    IAutoscaleApi() = default;
    virtual ~IAutoscaleApi() = default;

    virtual pplx::task<std::shared_ptr<Create_autoscale_config_200_response>> createAutoscaleConfig(
        std::shared_ptr<Create_autoscale_config_request> createAutoscaleConfigRequest
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Create_autoscale_policy_200_response>> createAutoscalePolicy(
        utility::string_t uuid,
        std::shared_ptr<Create_autoscale_policy_request> createAutoscalePolicyRequest
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Delete_autoscale_configs_200_response>> deleteAutoscaleConfigByUuid(
        utility::string_t uuid
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Delete_autoscale_configs_200_response>> deleteAutoscaleConfigs(
        boost::optional<std::vector<std::shared_ptr<Get_autoscale_configs_request_inner>>> getAutoscaleConfigsRequestInner
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Delete_autoscale_policies_200_response>> deleteAutoscalePolicies(
        utility::string_t uuid,
        boost::optional<std::vector<std::shared_ptr<Get_autosacle_policies_request_inner>>> getAutosaclePoliciesRequestInner
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Delete_autoscale_policy_by_service_uuid_and_policy_name_200_response>> deleteAutoscalePolicyByServiceUuidAndPolicyName(
        utility::string_t uuid,
        utility::string_t name
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Get_autosacle_policies_200_response>> getAutosaclePolicies(
        utility::string_t uuid,
        boost::optional<std::vector<std::shared_ptr<Get_autosacle_policies_request_inner>>> getAutosaclePoliciesRequestInner
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Get_autoscale_configs_200_response>> getAutoscaleConfigByServiceUuid(
        utility::string_t uuid
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Get_autoscale_configs_200_response>> getAutoscaleConfigs(
        boost::optional<std::vector<std::shared_ptr<Get_autoscale_configs_request_inner>>> getAutoscaleConfigsRequestInner
    ) const = 0;
    virtual pplx::task<std::shared_ptr<Get_autoscale_policy_by_service_uuid_and_policy_name_200_response>> getAutoscalePolicyByServiceUuidAndPolicyName(
        utility::string_t uuid,
        utility::string_t name
    ) const = 0;
};

class  AutoscaleApi  : public IAutoscaleApi 
{
public:
    using Base = IAutoscaleApi;

    explicit AutoscaleApi( std::shared_ptr<const ApiClient> apiClient );

    ~AutoscaleApi() override;

    /// <summary>
    /// Create autoscale configuration
    /// </summary>
    /// <remarks>
    /// Creates an autoscale configuration for the specified service. 
    /// </remarks>
    /// <param name="createAutoscaleConfigRequest"></param>
    pplx::task<std::shared_ptr<Create_autoscale_config_200_response>> createAutoscaleConfig(
        std::shared_ptr<Create_autoscale_config_request> createAutoscaleConfigRequest
    ) const override;
    /// <summary>
    /// Create an autoscale policy
    /// </summary>
    /// <remarks>
    /// Adds a new autoscale policy to the existing autoscale configuration of the specified service. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    /// <param name="createAutoscalePolicyRequest"></param>
    pplx::task<std::shared_ptr<Create_autoscale_policy_200_response>> createAutoscalePolicy(
        utility::string_t uuid,
        std::shared_ptr<Create_autoscale_policy_request> createAutoscalePolicyRequest
    ) const override;
    /// <summary>
    /// Delete an autoscale configuration given its UUID
    /// </summary>
    /// <remarks>
    /// Deletes the autoscale configuration for the specified service. Unikraft Cloud will immediately drain all connections from all instances that have been created by autoscale and delete the instances afterwards. The draining phase is allowed to take at most &#x60;cooldown_time_ms&#x60; milliseconds after which remaining connections are forcefully closed. The master instance is never deleted. However, deleting the autoscale configuration causes the master instance to start if it is stopped. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    pplx::task<std::shared_ptr<Delete_autoscale_configs_200_response>> deleteAutoscaleConfigByUuid(
        utility::string_t uuid
    ) const override;
    /// <summary>
    /// Delete one or more autoscale configurations
    /// </summary>
    /// <remarks>
    /// Deletes the autoscale configuration for the specified service. Unikraft Cloud will immediately drain all connections from all instances that have been created by autoscale and delete the instances afterwards. The draining phase is allowed to take at most &#x60;cooldown_time_ms&#x60; milliseconds after which remaining connections are forcefully closed. The master instance is never deleted. However, deleting the autoscale configuration causes the master instance to start if it is stopped. 
    /// </remarks>
    /// <param name="getAutoscaleConfigsRequestInner"> (optional)</param>
    pplx::task<std::shared_ptr<Delete_autoscale_configs_200_response>> deleteAutoscaleConfigs(
        boost::optional<std::vector<std::shared_ptr<Get_autoscale_configs_request_inner>>> getAutoscaleConfigsRequestInner
    ) const override;
    /// <summary>
    /// Delete one or more autoscale policies
    /// </summary>
    /// <remarks>
    /// Deletes the specified autoscale policies. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    /// <param name="getAutosaclePoliciesRequestInner"> (optional)</param>
    pplx::task<std::shared_ptr<Delete_autoscale_policies_200_response>> deleteAutoscalePolicies(
        utility::string_t uuid,
        boost::optional<std::vector<std::shared_ptr<Get_autosacle_policies_request_inner>>> getAutosaclePoliciesRequestInner
    ) const override;
    /// <summary>
    /// Delete an autoscale policy given its service uuid and policy name
    /// </summary>
    /// <remarks>
    /// Deletes the specified autoscale policy. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    /// <param name="name">The name of the resource. The name is a string that identifies the resource. The name is sometimes returned by the API after creating a resource. </param>
    pplx::task<std::shared_ptr<Delete_autoscale_policy_by_service_uuid_and_policy_name_200_response>> deleteAutoscalePolicyByServiceUuidAndPolicyName(
        utility::string_t uuid,
        utility::string_t name
    ) const override;
    /// <summary>
    /// Get one or more autoscale policies
    /// </summary>
    /// <remarks>
    /// Returns the configuration of the specified autoscale policy. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    /// <param name="getAutosaclePoliciesRequestInner"> (optional)</param>
    pplx::task<std::shared_ptr<Get_autosacle_policies_200_response>> getAutosaclePolicies(
        utility::string_t uuid,
        boost::optional<std::vector<std::shared_ptr<Get_autosacle_policies_request_inner>>> getAutosaclePoliciesRequestInner
    ) const override;
    /// <summary>
    /// Get an autoscale configuration given the service UUID
    /// </summary>
    /// <remarks>
    /// Returns the current autoscale configuration of a service. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    pplx::task<std::shared_ptr<Get_autoscale_configs_200_response>> getAutoscaleConfigByServiceUuid(
        utility::string_t uuid
    ) const override;
    /// <summary>
    /// Get one or more autoscale configuration
    /// </summary>
    /// <remarks>
    /// Returns the current autoscale configuration of the supplied service(s). 
    /// </remarks>
    /// <param name="getAutoscaleConfigsRequestInner"> (optional)</param>
    pplx::task<std::shared_ptr<Get_autoscale_configs_200_response>> getAutoscaleConfigs(
        boost::optional<std::vector<std::shared_ptr<Get_autoscale_configs_request_inner>>> getAutoscaleConfigsRequestInner
    ) const override;
    /// <summary>
    /// Get a single autoscale policy
    /// </summary>
    /// <remarks>
    /// Returns the configuration of the specified autoscale policy. 
    /// </remarks>
    /// <param name="uuid">The UUID of the resource. The UUID is a 36-character string that uniquely identifies the resource. The UUID is returned by the API after creating a resource. </param>
    /// <param name="name">The name of the resource. The name is a string that identifies the resource. The name is sometimes returned by the API after creating a resource. </param>
    pplx::task<std::shared_ptr<Get_autoscale_policy_by_service_uuid_and_policy_name_200_response>> getAutoscalePolicyByServiceUuidAndPolicyName(
        utility::string_t uuid,
        utility::string_t name
    ) const override;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_API_AutoscaleApi_H_ */

