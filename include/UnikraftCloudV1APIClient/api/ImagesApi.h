/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ImagesApi.h
 *
 * 
 */

#ifndef CLOUD_UNIKRAFT_V1_API_ImagesApi_H_
#define CLOUD_UNIKRAFT_V1_API_ImagesApi_H_



#include "UnikraftCloudV1APIClient/ApiClient.h"

#include "UnikraftCloudV1APIClient/model/Get_certificates_default_response.h"
#include "UnikraftCloudV1APIClient/model/Get_images_200_response.h"
#include "UnikraftCloudV1APIClient/model/Get_images_request_inner.h"
#include <vector>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace cloud {
namespace unikraft {
namespace v1 {
namespace api {

using namespace cloud::unikraft::v1::model;

class  IImagesApi
{
public:
    IImagesApi() = default;
    virtual ~IImagesApi() = default;

    virtual pplx::task<std::shared_ptr<Get_images_200_response>> getImages(
        boost::optional<utility::string_t> ukc_namespace,
        boost::optional<bool> tagged,
        boost::optional<std::vector<std::shared_ptr<Get_images_request_inner>>> getImagesRequestInner
    ) const = 0;
};

class  ImagesApi  : public IImagesApi 
{
public:
    using Base = IImagesApi;

    explicit ImagesApi( std::shared_ptr<const ApiClient> apiClient );

    ~ImagesApi() override;

    /// <summary>
    /// Get list of available images
    /// </summary>
    /// <remarks>
    /// Retrieves all images visible to an account in OCI format. 
    /// </remarks>
    /// <param name="ukc_namespace">Filter images by namespace.  Note: Set the namespace to your Unikraft Cloud account name to list only your personal images. It can be &#x60;official&#x60; for listing only the official ones. In addition, the namespace can include the app name. For example, &#x60;${UKC_USER}/myapp&#x60; to list all your &#x60;myapp&#x60; images.  (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="tagged">Whether to include only tagged images.  (optional, default to false)</param>
    /// <param name="getImagesRequestInner"> (optional)</param>
    pplx::task<std::shared_ptr<Get_images_200_response>> getImages(
        boost::optional<utility::string_t> ukc_namespace,
        boost::optional<bool> tagged,
        boost::optional<std::vector<std::shared_ptr<Get_images_request_inner>>> getImagesRequestInner
    ) const override;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_API_ImagesApi_H_ */

