/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Autoscale_policy_step.h
 *
 * Step policy.  Note: Only one of &#x60;lower_bound&#x60; and &#x60;upper_bound&#x60; can be &#x60;null&#x60; or not specified. See the description of the step policy for more information on defining steps. 
 */

#ifndef CLOUD_UNIKRAFT_V1_MODEL_Autoscale_policy_step_H_
#define CLOUD_UNIKRAFT_V1_MODEL_Autoscale_policy_step_H_


#include "UnikraftCloudV1APIClient/ModelBase.h"


namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



/// <summary>
/// Step policy.  Note: Only one of &#x60;lower_bound&#x60; and &#x60;upper_bound&#x60; can be &#x60;null&#x60; or not specified. See the description of the step policy for more information on defining steps. 
/// </summary>
class  Autoscale_policy_step
    : public ModelBase
{
public:
    Autoscale_policy_step();
    virtual ~Autoscale_policy_step();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Autoscale_policy_step members

    /// <summary>
    /// Lower bound of the step range. In dimension of selected metric. 
    /// </summary>
    int32_t getLowerBound() const;
    bool lowerBoundIsSet() const;
    void unsetLower_bound();

    void setLowerBound(int32_t value);

    /// <summary>
    /// Upper bound of the step range. In dimension of selected metric. 
    /// </summary>
    int32_t getUpperBound() const;
    bool upperBoundIsSet() const;
    void unsetUpper_bound();

    void setUpperBound(int32_t value);

    /// <summary>
    /// Adjustment to take if metric is in range. 
    /// </summary>
    int32_t getAdjustment() const;
    bool adjustmentIsSet() const;
    void unsetAdjustment();

    void setAdjustment(int32_t value);


protected:
    int32_t m_Lower_bound;
    bool m_Lower_boundIsSet;
    int32_t m_Upper_bound;
    bool m_Upper_boundIsSet;
    int32_t m_Adjustment;
    bool m_AdjustmentIsSet;
};


}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_MODEL_Autoscale_policy_step_H_ */
