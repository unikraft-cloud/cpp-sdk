/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * User_quota_limits.h
 *
 * Additional limits. 
 */

#ifndef CLOUD_UNIKRAFT_V1_MODEL_User_quota_limits_H_
#define CLOUD_UNIKRAFT_V1_MODEL_User_quota_limits_H_


#include "UnikraftCloudV1APIClient/ModelBase.h"


namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



/// <summary>
/// Additional limits. 
/// </summary>
class  User_quota_limits
    : public ModelBase
{
public:
    User_quota_limits();
    virtual ~User_quota_limits();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// User_quota_limits members

    /// <summary>
    /// Minimum amount of memory assigned to live instances in megabytes. 
    /// </summary>
    int32_t getMinMemoryMb() const;
    bool minMemoryMbIsSet() const;
    void unsetMin_memory_mb();

    void setMinMemoryMb(int32_t value);

    /// <summary>
    /// Maximum amount of memory assigned to live instances in megabytes. 
    /// </summary>
    int32_t getMaxMemoryMb() const;
    bool maxMemoryMbIsSet() const;
    void unsetMax_memory_mb();

    void setMaxMemoryMb(int32_t value);

    /// <summary>
    /// Minimum size of a volume in megabytes. 
    /// </summary>
    int32_t getMinVolumeMb() const;
    bool minVolumeMbIsSet() const;
    void unsetMin_volume_mb();

    void setMinVolumeMb(int32_t value);

    /// <summary>
    /// Maximum size of a volume in megabytes. 
    /// </summary>
    int32_t getMaxVolumeMb() const;
    bool maxVolumeMbIsSet() const;
    void unsetMax_volume_mb();

    void setMaxVolumeMb(int32_t value);

    /// <summary>
    /// Minimum size of an autoscale group  Note: These restrict the &#x60;min_size&#x60; and &#x60;max_size&#x60; fields of the [autoscale configuration](https://unikraft.cloud/docs/api/v1/autoscale/#basics). If both values are &#x60;1&#x60; autoscale is not enabled for your account. If you want to explore autoscale for your services, please contact us via [support@unikraft.cloud](mailto:support@unikraft.cloud). 
    /// </summary>
    int32_t getMinAutoscaleSize() const;
    bool minAutoscaleSizeIsSet() const;
    void unsetMin_autoscale_size();

    void setMinAutoscaleSize(int32_t value);

    /// <summary>
    /// Maximum size of an autoscale group.  Note: These restrict the &#x60;min_size&#x60; and &#x60;max_size&#x60; fields of the [autoscale configuration](https://unikraft.cloud/docs/api/v1/autoscale/#basics). 
    /// </summary>
    int32_t getMaxAutoscaleSize() const;
    bool maxAutoscaleSizeIsSet() const;
    void unsetMax_autoscale_size();

    void setMaxAutoscaleSize(int32_t value);


protected:
    int32_t m_Min_memory_mb;
    bool m_Min_memory_mbIsSet;
    int32_t m_Max_memory_mb;
    bool m_Max_memory_mbIsSet;
    int32_t m_Min_volume_mb;
    bool m_Min_volume_mbIsSet;
    int32_t m_Max_volume_mb;
    bool m_Max_volume_mbIsSet;
    int32_t m_Min_autoscale_size;
    bool m_Min_autoscale_sizeIsSet;
    int32_t m_Max_autoscale_size;
    bool m_Max_autoscale_sizeIsSet;
};


}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_MODEL_User_quota_limits_H_ */
