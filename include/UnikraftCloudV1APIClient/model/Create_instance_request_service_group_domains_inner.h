/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Create_instance_request_service_group_domains_inner.h
 *
 * 
 */

#ifndef CLOUD_UNIKRAFT_V1_MODEL_Create_instance_request_service_group_domains_inner_H_
#define CLOUD_UNIKRAFT_V1_MODEL_Create_instance_request_service_group_domains_inner_H_


#include "UnikraftCloudV1APIClient/ModelBase.h"

#include "UnikraftCloudV1APIClient/model/Certificate.h"
#include <cpprest/details/basic_types.h>

namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {

class Certificate;


/// <summary>
/// 
/// </summary>
class  Create_instance_request_service_group_domains_inner
    : public ModelBase
{
public:
    Create_instance_request_service_group_domains_inner();
    virtual ~Create_instance_request_service_group_domains_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Create_instance_request_service_group_domains_inner members

    /// <summary>
    /// Public fully-qualified domain name under which the service is accessible from the Internet. 
    /// </summary>
    utility::string_t getFqdn() const;
    bool fqdnIsSet() const;
    void unsetFqdn();

    void setFqdn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Certificate> getCertificate() const;
    bool certificateIsSet() const;
    void unsetCertificate();

    void setCertificate(const std::shared_ptr<Certificate>& value);


protected:
    utility::string_t m_Fqdn;
    bool m_FqdnIsSet;
    std::shared_ptr<Certificate> m_Certificate;
    bool m_CertificateIsSet;
};


}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_MODEL_Create_instance_request_service_group_domains_inner_H_ */
