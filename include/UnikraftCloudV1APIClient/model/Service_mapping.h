/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Service_mapping.h
 *
 * 
 */

#ifndef CLOUD_UNIKRAFT_V1_MODEL_Service_mapping_H_
#define CLOUD_UNIKRAFT_V1_MODEL_Service_mapping_H_


#include "UnikraftCloudV1APIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



/// <summary>
/// 
/// </summary>
class  Service_mapping
    : public ModelBase
{
public:
    Service_mapping();
    virtual ~Service_mapping();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Service_mapping members

    /// <summary>
    /// Public-facing port. 
    /// </summary>
    int32_t getPort() const;
    bool portIsSet() const;
    void unsetPort();

    void setPort(int32_t value);

    /// <summary>
    /// Application port to which inbound traffic is redirected. 
    /// </summary>
    int32_t getDestinationPort() const;
    bool destinationPortIsSet() const;
    void unsetDestination_port();

    void setDestinationPort(int32_t value);

    /// <summary>
    /// See [Connection Handlers](https://unikraft.cloud/docs/api/v1/services/#handlers). 
    /// </summary>
    std::vector<utility::string_t>& getHandlers();
    bool handlersIsSet() const;
    void unsetHandlers();

    void setHandlers(const std::vector<utility::string_t>& value);


protected:
    int32_t m_Port;
    bool m_PortIsSet;
    int32_t m_Destination_port;
    bool m_Destination_portIsSet;
    std::vector<utility::string_t> m_Handlers;
    bool m_HandlersIsSet;
};


}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_MODEL_Service_mapping_H_ */
