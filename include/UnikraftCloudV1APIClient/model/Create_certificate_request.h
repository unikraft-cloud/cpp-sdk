/**
 * Unikraft Cloud Platform
 * This is the API of the Unikraft Cloud Platform. 
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: info@unikraft.cloud
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Create_certificate_request.h
 *
 * 
 */

#ifndef CLOUD_UNIKRAFT_V1_MODEL_Create_certificate_request_H_
#define CLOUD_UNIKRAFT_V1_MODEL_Create_certificate_request_H_


#include "UnikraftCloudV1APIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace cloud {
namespace unikraft {
namespace v1 {
namespace model {



/// <summary>
/// 
/// </summary>
class  Create_certificate_request
    : public ModelBase
{
public:
    Create_certificate_request();
    virtual ~Create_certificate_request();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Create_certificate_request members

    /// <summary>
    /// The name of the certificate to upload.  Note: If no name is specified a random name of the form &#x60;&lt;cn&gt;-X&#x60; is auto-generated, where &#x60;&lt;cn&gt;&#x60; is the common name and &#x60;X&#x60; is a 5 character long random alphanumeric suffix. For wildcard domains the wildcard part is cut off. 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// The common name of the certificate. 
    /// </summary>
    utility::string_t getCn() const;
    bool cnIsSet() const;
    void unsetCn();

    void setCn(const utility::string_t& value);

    /// <summary>
    /// The chain of the certificate in PEM format. 
    /// </summary>
    utility::string_t getChain() const;
    bool chainIsSet() const;
    void unsetChain();

    void setChain(const utility::string_t& value);

    /// <summary>
    /// The private key of the certificate in PEM format. 
    /// </summary>
    utility::string_t getPkey() const;
    bool pkeyIsSet() const;
    void unsetPkey();

    void setPkey(const utility::string_t& value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Cn;
    bool m_CnIsSet;
    utility::string_t m_Chain;
    bool m_ChainIsSet;
    utility::string_t m_Pkey;
    bool m_PkeyIsSet;
};


}
}
}
}

#endif /* CLOUD_UNIKRAFT_V1_MODEL_Create_certificate_request_H_ */
